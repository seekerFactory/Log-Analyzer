<h1>Streams</h1>

<div class="description">
  Streams can be used to store specific views on the syslog messages. Define filter rules for each stream and quickly select
  them later. Example: Create a stream "All database messages of host www15" that only shows messages from host "www15" which
  include the string "MySQL".
</div>

<div id="streams-new-stream">
<% permitted_to? :create, :streams do %>
  <%= form_for @new_stream, :url => streams_path do |f| %>
    <%= f.label :title, "Title:" %>
    <%= f.text_field :title %>
    <%= awesome_submit_link "Create stream" %>
  <% end %>
<% end %>
</div>

<div id="streams-manage-categories-link">
<% permitted_to? :create, :streamcategories do %>
  <%= awesome_link "Manage categories", streamcategories_path %>
<% end %>
</div>

<br style="clear: both;" />

<div id="streams-streams">
  <% Streamcategory.all.each do |category| %>
    <% next if !category.has_accessable_streams_for_user?(current_user) %>

    <h2 class="streams-title"><%= category.title %></h2>
    <% category.streams.sort{ |a,b| a.title <=> b.title }.each do |stream| %>
      <%= render :partial => "streamrow", :locals => { :stream => stream } %>
    <% end %>
  <% end %>

  <% unless @streams_with_no_category.blank? %>
    <h2 class="streams-title">Uncategorized</h2>
    <% @streams_with_no_category.sort{ |a,b| b.title <=> a.title }.each do |stream| %>
      <%= render :partial => "streamrow", :locals => { :stream => stream } %>
    <% end %>
  <% end %>
</div>

<br style="clear: both;" />
